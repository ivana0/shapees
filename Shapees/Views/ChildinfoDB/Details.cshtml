@model Shapees.Models.DatabaseModel.Childinfo

@{
    ViewData["Title"] = "Details";
    int? type = (HttpContextAccessor.HttpContext.Session.GetInt32("role"));
    switch (type)
    {
        case 3:
            Layout = "~/Views/Shared/AdminChildrenLayout.cshtml";
            break;

        case 2:
            Layout = "~/Views/Shared/EducatorChildrenLayout.cshtml";
            break;

        case 1:
            Layout = "~/Views/Shared/ParentChildrenLayout.cshtml";
            break;

        default:
            Layout = "~/Views/Shared/AdminChildrenLayout.cshtml";
            break;
    }
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Session



<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="~/css/ChildrensViewStyle.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css" rel='stylesheet' type='text/css'>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!--        START CSS        -->
    <style>
        /***********    TABS CSS       ***********/
        .btn-gray {
            color: #fff;
            background-color: #eee;
            border-color: #ccc;
            color: #000;
        }

        .btn.borderless {
            border: none;
            background: inherit;
        }

            .btn.borderless.dropdown-toggle {
                -webkit-box-shadow: none;
                box-shadow: none;
            }

        .rb {
            border-right: 1px solid #ccc;
        }

        .topcis-header {
            margin-top: 20px;
            margin-bottom: -1px;
            background-color: #f8f8f8;
            border: 1px solid #e5e5e5;
            border-radius: 3px 3px 0 0;
            padding-top: 5px;
            padding-bottom: 5px;
        }


        /***********    HR (LINE) CSS       ***********/
        .hr.styleSeparator {
            height: 10px;
            border: 0;
            box-shadow: 0 10px 10px -10px #8c8b8b inset;
        }


        /***********    SEARCH BAR CSS       ***********/
        #searchbar {
            width: 200px;
            height: 48px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
            float: right;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
            background-color: white;
            background-image: url(search.png);
            background-position: 10px 12px;
            background-repeat: no-repeat;
            padding: 12px 20px 12px 40px;
        }

        /* When the input field gets focus, change its width to 100% */
        #searchbar {
            width: 100%;
        }
        /* Style the tab */
        div.tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

            /* Style the buttons inside the tab */
            div.tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
            }

                /* Change background color of buttons on hover */
                div.tab button:hover {
                    background-color: #ddd;
                }


                /* Create an active/current tablink class */
                div.tab button.active {
                    background-color: #ccc;
                }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }

        /* Remove hover for disabled tab links */
        #edit_child {
            background-color: #f1f1f1;
            color: #D3D3D3;
        }

        #delete_child {
            background-color: #f1f1f1;
            color: #D3D3D3;
        }

    </style>
    <!--        END CSS        -->
    <!--        START SCRIPT        -->
    <script>
        //open tab function
        function openOption(evt, optionName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab
            document.getElementById(optionName).style.display = "block";
            evt.currentTarget.className += " active";

        }
        //open children home page on body load
        function loadChildrenDetails() {
            // Show the children home tab
            document.getElementById('ChildDetails').style.display = "block";
            // Set button to active
            document.getElementById("child_details").className += " active";
        }

        //redirect to action pages
        function openIndex() {
            document.location = '@Url.Action("Index", "ChildinfoDB")';

        }
        function openCreate() {
            document.location = '@Url.Action("Create", "ChildinfoDB")';

        }


        function openEdit() {

            document.getElementById("edit_child").onclick = function () {
                //disable
                this.disabled = true;

            }

        }
        function openDelete() {
            document.getElementById("delete_child").onclick = function () {
                //disable
                this.disabled = true;
            }

        }
        function openDetails() {
            document.getElementById("child_details").onclick = function () {
                //disable
                this.disabled = true;
            }

        }


        function blockHover() {
            document.getElementById("delete_child").style.backgroundColor = inherit;
            document.getElementById("edit_child").style.backgroundColor = inherit;
            document.getElementById("child_details").style.backgroundColor = inherit;
        }


    </script>
    <!--        END SCRIPT        -->
</head>

<body onload="loadChildrenDetails()">
    <h2>Children</h2>
    <!--       START TABS        -->
    <div class="tab">
        <button id="home_child" class="tablinks" onclick="openIndex()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span>&ensp;Search Child</button>
        <button id="create_child" class="tablinks" onclick="openCreate()"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&ensp;Add Child</button>
        <button id="edit_child" class="tablinks" onclick="openEdit()"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&ensp;Edit Child</button>
        <button id="delete_child" class="tablinks" onclick="openDelete()"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>&ensp;Delete Child</button>
        <button id="child_details" class="tablinks" onclick="openOption(event, 'ChildDetails')"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&ensp;Child Details</button>
    </div>

    <!--    FIRST TAB - Home (list of children)    -->
    <div id="ListChildren" class="tabcontent">

    </div>
    <!--    SECOND TAB - Create User    -->
    <div id="CreateChild" class="tabcontent">

    </div>
    <!-- END Add Child Form and tab -->
    <!--    3RD TAB - Edit User    -->
    <div id="EditChild" class="tabcontent">

        <br /><br />
    </div>
    <!---->
    <!--    4TH TAB - Delete User    -->
    <div id="DeleteChild" class="tabcontent">


        <br /><br />
    </div>
    <!---->
    <!--    5TH TAB -  User  Details  -->
    <div id="ChildDetails" class="tabcontent">

        <h2>Details</h2>

        <div>
            <h4>Childinfo</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Inroom)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Inroom)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Educatorfname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Educatorfname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Educatorlname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Educatorlname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Street)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Street)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.City)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.City)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Postcode)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Postcode)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.State)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.State)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Childfirstname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Childfirstname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Childlastname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Childlastname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Dob)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Dob)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Currentage)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Currentage)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Contacnumber1)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contacnumber1)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Contacnumber2)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Contacnumber2)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent1fname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent1fname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent1lname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent1lname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent2fname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent2fname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent2lname)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent2lname)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Shortinfo)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Shortinfo)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Specialneeds)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Specialneeds)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Profileimage)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Profileimage)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Educator)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Educator.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent1Navigation)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent1Navigation.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Parent2Navigation)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Parent2Navigation.Email)
                </dd>
            </dl>
        </div>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Childid">Edit</a> |
            <a asp-action="Index">Back to List</a>
        </div>


        <br /><br />
    </div>

</body>


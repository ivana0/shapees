@model Shapees.Models.DatabaseModel.Userinfo

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!------------------------------>
<!--        START HEAD        -->
<!------------------------------>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--        START CSS        -->
    <style>
        /***********    TABS CSS       ***********/
        .btn-gray {
            color: #fff;
            background-color: #eee;
            border-color: #ccc;
            color: #000;
        }

        .btn.borderless {
            border: none;
            background: inherit;
        }

       .btn.borderless.dropdown-toggle {
            -webkit-box-shadow: none;
            box-shadow: none;
       }

        .rb {
            border-right: 1px solid #ccc;
        }

        .topcis-header {
            margin-top: 20px;
            margin-bottom: -1px;
            background-color: #f8f8f8;
            border: 1px solid #e5e5e5;
            border-radius: 3px 3px 0 0;
            padding-top: 5px;
            padding-bottom: 5px;
        }


        /***********    HR (LINE) CSS       ***********/
        .hr.styleSeparator {
            height: 10px;
            border: 0;
            box-shadow: 0 10px 10px -10px #8c8b8b inset;
        }


        /***********    SEARCH BAR CSS       ***********/
        #searchbar {
            width: 200px;
            height: 48px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
            float: right;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            font-size: 14px;
            background-color: white;
            background-image: url(search.png);
            background-position: 10px 12px;
            background-repeat: no-repeat;
            padding: 12px 20px 12px 40px;
        }

        /* When the input field gets focus, change its width to 100% */
        #searchbar {
            width: 100%;
        }
        /* Style the tab */
        div.tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

            /* Style the buttons inside the tab */
            div.tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
            }

                /* Change background color of buttons on hover */
                div.tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                div.tab button.active {
                    background-color: #ccc;
                }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }

        /* Remove hover for disabled tab links */
        #edit_users {
            background-color: #f1f1f1;
            color: #D3D3D3;
        }

        #delete_users {
            background-color: #f1f1f1;
            color: #D3D3D3;
        }
    </style>
    <!--        END CSS        -->
    <!--        START SCRIPT        -->
    <script>
        //open tab function
        function openOption(evt, optionName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab

            document.getElementById(optionName).style.display = "block";
            evt.currentTarget.className += " active";

        }

        //redirect to action pages
        function openIndex() {
            document.location = '@Url.Action("Index", "UserinfoDB")';

        }
        function openCreate() {
            document.location = '@Url.Action("Create", "UserinfoDB")';

        }
        function openEdit() {

            document.getElementById("edit_users").onclick = function () {
                //disable
                this.disabled = true;
            }

        }
        function openDelete() {
            document.getElementById("delete_users").onclick = function () {
                //disable
                this.disabled = true;
            }

        }
        function openDetails() {
            document.getElementById("user_details").onclick = function () {
                //disable
                this.disabled = true;
            }

        }

        function blockHover() {
            document.getElementById("delete_users").style.backgroundColor = inherit;
            document.getElementById("edit_users").style.backgroundColor = inherit;
        }

        //open users home page on body load
        function loadUsersDetails() {
            // Show the users home tab
            document.getElementById('UserDetails').style.display = "block";
            // Set button to active
            document.getElementById("user_details").className += " active";
        }



    </script>

    <!--    SCRIPT FUNCTIONS FOR HIDE/SHOW ADDITIONAL INFO BASED ON USER TYPE   -->
    <script type="text/javascript">

        function hideAdditionalForm() {
            document.getElementById('employee1').style.display = "none";
            document.getElementById('employee2').style.display = "none";
            document.getElementById('parent1').style.display = "none";
            document.getElementById('parent2').style.display = "none";
            document.getElementById('educator1').style.display = "none";
        }
        function openDirectorAdditionalInfo() {
            document.getElementById('employee1').style.display = "block";
            document.getElementById('employee2').style.display = "block";
            document.getElementById('educator1').style.display = "none";
            document.getElementById('parent1').style.display = "none";
            document.getElementById('parent2').style.display = "none";
        }
        function openEducatorAdditionalInfo() {
            document.getElementById('educator1').style.display = "block";
            document.getElementById('employee1').style.display = "block";
            document.getElementById('employee2').style.display = "block";
            document.getElementById('parent1').style.display = "none";
            document.getElementById('parent2').style.display = "none";

        }
        function openParentAdditionalInfo() {
            document.getElementById('employee1').style.display = "none";
            document.getElementById('employee2').style.display = "none";
            document.getElementById('parent1').style.display = "block";
            document.getElementById('parent2').style.display = "block";
            document.getElementById('educator1').style.display = "none";
        }

        function loadFormType() {
            var userType = document.getElementById("usertype");

            switch (userType.options.selectedIndex) {
                case 0:
                    hideAdditionalForm();
                    break;
                case 1:
                    openParentAdditionalInfo();
                    break;
                case 2:
                    openEducatorAdditionalInfo();
                    break;
                case 3:
                    openDirectorAdditionalInfo();
                    break;
                default:
                    break;
            }
        }

    </script>
    <!--        END SCRIPT        -->
</head>
<!----------------------------->
<!--        END HEAD        --->
<!----------------------------->
<!------------------------------>
<!--        START BODY        -->
<!------------------------------>

<body onload="loadUsersDetails()">
    <h2>User Details</h2>
    <div class="tab">
        <button  id="home_users" class="tablinks" onclick="openIndex()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span>&ensp;Search Users</button>
        <button id="create_users" class="tablinks" onclick="openCreate()"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&ensp;Create User</button>
        <button id="edit_users" class="tablinks" onclick="openEdit()"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&ensp;Edit User</button>
        <button id="delete_users" class="tablinks" onclick="openDelete()"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>&ensp;Delete User</button>
        <button id="user_details" class="tablinks" onclick="openOption(event, 'UserDetails')"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>&ensp;User Details</button>
    </div>
    <!--       START TABS        -->
    <!--    FIRST TAB - List Users    -->
    <div id="ListUsers" class="tabcontent">
    </div>
    <!--    END FIRST TAB - List Users    -->
    <!--    SECOND TAB - Create User    -->
    <div id="CreateUser" class="tabcontent">
    </div>
    <!--        END SECOND TAB      -->
    <!--    3RD TAB - Edit User    -->
    <div id="EditUser" class="tabcontent">


        <br /><br />
    </div>
    <!---->
    <!--    4TH TAB - Delete User    -->
    <div id="DeleteUser" class="tabcontent">
    </div>
    <!---->
    <!--    5TH TAB -  User  Details  -->
    <div id="UserDetails" class="tabcontent">
    <!--------------------------     EDITING TEMPLATE   BELOW    -------------------------------->

        <div>
            <br />
            <h4>&emsp;User details</h4>
            <hr />
            @if (Model.Profileimage != null)
            {
                <div class="row">
                    <div class="col-md-1">
                    </div>
                    <div class="col-md-10">
                        <img height="150" width="150" src="@ViewBag.imagesrc" /><br />
                    </div>
                </div>
                <br />
            }
            @if (Model.Usertype == 2)
            {
                @:<br /><br />
                    @:<div class="container">
                        @:<span>Progress bar of educator's performance: </span><br /><br />
                    @:</div>
                    @:<div class="progress">
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow=@Model.PerformancePercentage aria-valuemin="0" aria-valuemax="100" style="width:@(Model.PerformancePercentageStr);min-width: 2em;">
                                @Model.PerformancePercentageStr
                            </div>
                    @:</div>
                    @:<dl class="dl-horizontal">
                        <dt>
                        @Html.Label("Tasks given: ")
                        </dt>
                        <dd>
                        @Html.DisplayFor(model => model.Totaltasks)
                        </dd>
                        <dt>
                            @Html.Label("Tasks completed: ")
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Taskscompleted)
                        </dd>
                    @:</dl>
            }
            <h5>&emsp;Personal information</h5>
            <hr width="90%" />
            <dl class="dl-horizontal">
                <!--        USER INFO      -->
                <dt>
                    First name
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Firstname)
                </dd>
                <dt>
                    Last name
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Lastname)
                </dd>
                <dt>
                    @if (Model.Dob != null)
                    {
                        @Html.Label("Date of birth")
                    } 
                </dt>
                <dd>
                    @if (Model.Dob != null)
                    {
                       @Html.DisplayFor(model => model.Dob)
                    }
                </dd>
            </dl>
            <h5>&emsp;Login information</h5>
            <hr width="90%" />
            <dl class="dl-horizontal">
                <!--        LOGIN INFO      -->
                <dt>
                    @Html.DisplayNameFor(model => model.Username)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Username)
                </dd>
                <dt>
                    E-mail
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <!--        USER TYPE       -->
                <dt>
                    User type
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Usertypename)
                </dd>
                <!--        END USER TYPE       -->
                <!--        END LOGIN INFO      -->
             </dl>
            <!--        USER ADDRESSS       -->
            <h5>&emsp;Address</h5>
            <hr width="90%" />
            @if (String.IsNullOrEmpty(Model.Street) && String.IsNullOrEmpty(Model.City) && Model.Postcode == null && String.IsNullOrEmpty(Model.State))
            {
                @:<span style="color:red;">&emsp;Address not entered.</span><br />
            }
            else if (String.IsNullOrEmpty(Model.Street) || String.IsNullOrEmpty(Model.City) || Model.Postcode == null || String.IsNullOrEmpty(Model.State))
            {
                @:<span style="color:red;">&emsp;Address not complete - please enter missing information.</span><br />
            }
             <dl class="dl-horizontal">
                <dt>
                    @if (Model.Street != null)
                    {
                        @Html.DisplayNameFor(model => model.Street)
                    }
                </dt>
                <dd>
                    @if (Model.Street != null)
                    {
                        @Html.DisplayFor(model => model.Street)
                    }
                </dd>
                <dt>
                    @if (Model.City != null)
                    {
                        @Html.DisplayNameFor(model => model.City)
                    }
                </dt>
                <dd>
                    @if (Model.City != null)
                    {
                        @Html.DisplayFor(model => model.City)
                    }
                </dd>
                <dt>
                    @if (Model.Postcode != null)
                    {
                        @Html.DisplayNameFor(model => model.Postcode)
                    }
                </dt>
                <dd>
                    @if (Model.Postcode != null)
                    {
                        @Html.DisplayFor(model => model.Postcode)
                    }
                </dd>
                <dt>
                    @if (Model.State != null)
                    {
                        @Html.DisplayNameFor(model => model.State)
                    }
                </dt>
                <dd>
                    @if (Model.State != null)
                    {
                        @Html.DisplayFor(model => model.State)
                    }
                </dd>
            </dl>
                <!--       END USER ADDRESSS       -->
                <!--       USER CONTACT INFO       -->
            <h5>&emsp;Contact information</h5>
            <hr width="90%" />
            @if (String.IsNullOrEmpty(Model.Homephone) && String.IsNullOrEmpty(Model.Mobilephone))
            {
                @:<span style="color:red;">&emsp;Contact information not entered.</span><br />
            }
            <dl class="dl-horizontal">
                <dt>
                    @if (Model.Homephone != null)
                    {
                        @Html.Label("Home phone")
                    }
                </dt>
                <dd>
                    @if (Model.Homephone != null)
                    {
                        @Html.DisplayFor(model => model.Homephone)
                    }
                </dd>
                <dt>
                    @if (Model.Mobilephone != null)
                    {
                        @Html.Label("Mobile phone")
                    }

                </dt>
                <dd>
                    @if (Model.Mobilephone != null)
                    {
                        @Html.DisplayFor(model => model.Mobilephone)
                    }
                </dd>
                </dl>
                <!--       USER CONTACT INFO END       -->
                <!--     FIELDS ONLY DISPLAYED FOR EMPLOYEE INFO    -->
                <h5>&emsp;Additional information</h5>
                <hr width="90%" />
                @if (String.IsNullOrEmpty(Model.Roomassigned) && Model.Employedon == null && String.IsNullOrEmpty(Model.Shortbio) && Model.Usertype == 2)
                {
                    @:<span style="color:red;">&emsp;Additional information not entered for educator.</span><br />
                }
                else if (Model.Employedon == null && String.IsNullOrEmpty(Model.Shortbio) && Model.Usertype == 3)
                {
                    @:<span style="color:red;">&emsp;Additional information not entered for director.</span><br />
                }
                else if (String.IsNullOrEmpty(Model.Othercontact) && String.IsNullOrEmpty(Model.Parentof) && Model.Usertype == 1)
                {
                    @:<span style="color:red;">&emsp;Additional information not entered for parent.</span><br />
                }
                <dl class="dl-horizontal">
                    <dt>
                        @if (Model.Employedon != null)
                        {
                            @Html.Label("Employeed on")
                        }
                    </dt>
                    <dd>
                        @if (Model.Employedon != null)
                        {
                            @Html.DisplayFor(model => model.Employedon)
                        }
                    </dd>

                    <dt>
                        @if (Model.Roomassigned != null)
                        {
                            @Html.Label("Room assigned")
                        }
                    </dt>
                    <dd>
                        @if (Model.Roomassigned != null && Model.Roomid != null)
                        {
                            @Html.DisplayFor(model => model.Roomassigned)
                        }
                    </dd>
                    <!--     FIELDS ONLY DISPLAYED FOR PARENT INFO    -->
                    <dt>
                        @if (Model.Othercontact != null)
                        {
                            @Html.Label("Other contact")
                        }
                    </dt>
                    <dd>
                        @if (Model.Othercontact != null)
                        {
                            @Html.DisplayFor(model => model.Othercontact)
                        }
                    </dd>
                    <dt>
                        @if (Model.Parentof != null)
                        {
                            @Html.Label("Parent of")
                        }
                    </dt>
                    <dd>
                        @if (Model.Parentof != null)
                        {
                            @Html.DisplayFor(modelItem => Model.Parentof)
                        }
                    </dd>
                </dl>

            </div>
        <br />
        <br />
        <div>
            &emsp;<a asp-action="Index"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&ensp;Back to User List</a> &emsp;|&emsp;
            <a asp-action="Edit" asp-route-id="@Model.Userid"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>&ensp;Edit</a> 
        </div>

        <br /><br />
    </div>
    <!---->
</body>

<!----------------------------->
<!--        END BODY        -->
<!----------------------------->

